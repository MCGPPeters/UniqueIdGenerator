<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
    
    <!-- Important settings for analyzers -->
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <IsRoslynComponent>true</IsRoslynComponent>
    <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
    <DevelopmentDependency>true</DevelopmentDependency>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    
    <!-- NuGet Package Metadata -->
    <PackageId>UniqueIdGenerator</PackageId>
    <Version>1.0.0</Version>
    <Authors>Your Name</Authors>
    <Company>Your Company</Company>
    <Title>UniqueIdGenerator</Title>
    <Description>A C# source generator that creates compile-time unique IDs for your methods with various format options.</Description>
    <PackageTags>source-generator;roslyn;unique-id;guid;identifier</PackageTags>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageIcon>icon.png</PackageIcon>
    <RepositoryUrl>https://github.com/yourusername/UniqueIdGenerator</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageReleaseNotes>Initial release with support for Hex8, Hex16, Hex32, GUID, and HTML ID formats.</PackageReleaseNotes>
    <Copyright>Copyright Â© 2025</Copyright>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <Deterministic>true</Deterministic>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="4.14.0">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.14.0">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="All"/>
  </ItemGroup>
  
  <ItemGroup>
    <!-- Package the generator assembly inside the analyzer directory -->
    <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    <None Include="..\README.md" Pack="true" PackagePath="\" />
    <None Include="..\LICENSE" Pack="true" PackagePath="\" />
    <None Include="..\assets\icon.png" Pack="true" PackagePath="\" />
    <!-- Add empty files to ensure we have content for the supported frameworks -->
    <None Include="_._" Pack="true" PackagePath="lib/netstandard2.0/" />
    <None Include="_._" Pack="true" PackagePath="lib/net45/" />
    <None Include="_._" Pack="true" PackagePath="lib/netcoreapp3.1/" />
    <None Include="_._" Pack="true" PackagePath="lib/net6.0/" />
  </ItemGroup>
  
  <!-- Make sure the empty placeholder file is copied to the output -->
  <ItemGroup>
    <None Update="_._" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

  <!-- Ensure the analyzer assembly is added correctly -->
  <Target Name="AddAnalyzerAssemblyToOutput" BeforeTargets="Build">
    <ItemGroup>
      <Content Include="$(OutputPath)\$(AssemblyName).dll" CopyToOutputDirectory="PreserveNewest" />
    </ItemGroup>
  </Target>

</Project>
