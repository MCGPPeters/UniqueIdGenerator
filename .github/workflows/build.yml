name: Build and Publish

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Needed for GitVersion
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        versionSpec: '5.x'
        
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.10.2
        
    - name: Display GitVersion outputs
      run: |
        echo "Major: ${{ steps.gitversion.outputs.major }}"
        echo "Minor: ${{ steps.gitversion.outputs.minor }}"
        echo "Patch: ${{ steps.gitversion.outputs.patch }}"
        echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
        
    - name: Restore dependencies
      run: dotnet restore Praefixum.SourceGen/Praefixum.SourceGen.csproj
      
    - name: Build
      run: dotnet build Praefixum.SourceGen/Praefixum.SourceGen.csproj --configuration Release --no-restore /p:Version=${{ steps.gitversion.outputs.semVer }}
      
    - name: Test
      run: dotnet test Praefixum.Tests/Praefixum.Tests.csproj --configuration Release
      
    - name: Pack
      run: dotnet pack Praefixum.SourceGen/Praefixum.SourceGen.csproj --configuration Release --no-build --output nuget-packages /p:Version=${{ steps.gitversion.outputs.semVer }}
      
    - name: Upload NuGet packages as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: nuget-packages/*.nupkg
        
    - name: Publish to NuGet
      if: startsWith(github.ref, 'refs/tags/v')
      run: dotnet nuget push nuget-packages/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
